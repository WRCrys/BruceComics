// <auto-generated />
using System;
using DevCa.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevCa.Data.Migrations
{
    [DbContext(typeof(BruceComicsContext))]
    [Migration("20210901133022_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("DevCA.Business.Model.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("BookGenderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<long>("UserCreationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserCreationId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("DevCA.Business.Model.BookGender", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookGender");
                });

            modelBuilder.Entity("DevCA.Business.Model.Reserve", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<long>("Returned")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reserve");
                });

            modelBuilder.Entity("DevCA.Business.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Administrator")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DevCA.Business.Model.Book", b =>
                {
                    b.HasOne("DevCA.Business.Model.User", "UserCreation")
                        .WithMany("Books")
                        .HasForeignKey("UserCreationId")
                        .IsRequired();

                    b.Navigation("UserCreation");
                });

            modelBuilder.Entity("DevCA.Business.Model.BookGender", b =>
                {
                    b.HasOne("DevCA.Business.Model.Book", "Book")
                        .WithMany("BookGenders")
                        .HasForeignKey("BookId")
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("DevCA.Business.Model.Reserve", b =>
                {
                    b.HasOne("DevCA.Business.Model.Book", "Book")
                        .WithMany("Reserves")
                        .HasForeignKey("BookId")
                        .IsRequired();

                    b.HasOne("DevCA.Business.Model.User", "User")
                        .WithMany("Reserves")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DevCA.Business.Model.Book", b =>
                {
                    b.Navigation("BookGenders");

                    b.Navigation("Reserves");
                });

            modelBuilder.Entity("DevCA.Business.Model.User", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Reserves");
                });
#pragma warning restore 612, 618
        }
    }
}
